{"ast":null,"code":"var _jsxFileName = \"/home/danielnote-linux/demotodo/src/AppUI.jsx\";\nimport React from 'react';\nimport { TodoCounter } from './Components/TodoCounter';\nimport { TodoSearch } from './Components/TodoSearch';\nimport { TodoList } from './Components/TodoList';\nimport { TodoItem } from './Components/TodoItem';\nimport { CreateTodoButton } from './Components/CreateTodoButton'; // import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppUI = ({\n  total,\n  completed,\n  searchValue,\n  setSearchValue,\n  searchedTodos,\n  onComplete,\n  onDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {\n      total: total,\n      completed: completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n      searchValue: searchValue,\n      setSearchValue: setSearchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed,\n        onComplete: () => completeTodo(todo.text),\n        onDelete: () => deleteTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AppUI;\nexport { AppUI };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppUI\");","map":{"version":3,"sources":["/home/danielnote-linux/demotodo/src/AppUI.jsx"],"names":["React","TodoCounter","TodoSearch","TodoList","TodoItem","CreateTodoButton","AppUI","total","completed","searchValue","setSearchValue","searchedTodos","onComplete","onDelete","map","todo","text","completeTodo","deleteTodo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,gBAAT,QAAiC,+BAAjC,C,CACA;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACXC,EAAAA,KADW;AAEXC,EAAAA,SAFW;AAGXC,EAAAA,WAHW;AAIXC,EAAAA,cAJW;AAKXC,EAAAA,aALW;AAMXC,EAAAA,UANW;AAOXC,EAAAA;AAPW,CAAD,KAQR;AAEJ,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,KAAK,EAAEN,KADT;AAEE,MAAA,SAAS,EAAEC;AAFb;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AACE,MAAA,WAAW,EAAEC,WADf;AAEE,MAAA,cAAc,EAAEC;AAFlB;AAAA;AAAA;AAAA;AAAA,YALF,eAUE,QAAC,QAAD;AAAA,gBACGC,aAAa,CAACG,GAAd,CAAkBC,IAAI,iBACrB,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,QAAA,SAAS,EAAED,IAAI,CAACP,SAHlB;AAIE,QAAA,UAAU,EAAE,MAAMS,YAAY,CAACF,IAAI,CAACC,IAAN,CAJhC;AAKE,QAAA,QAAQ,EAAE,MAAME,UAAU,CAACH,IAAI,CAACC,IAAN;AAL5B,SACOD,IAAI,CAACC,IADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAVF,eAsBE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CApCD;;KAAMV,K;AAsCN,SAASA,KAAT","sourcesContent":["import React from 'react';\nimport { TodoCounter } from './Components/TodoCounter';\nimport { TodoSearch } from './Components/TodoSearch';\nimport { TodoList } from './Components/TodoList';\nimport { TodoItem } from './Components/TodoItem';\nimport { CreateTodoButton } from './Components/CreateTodoButton';\n// import './App.css';\n\nconst AppUI = ({\n    total,\n    completed,\n    searchValue,\n    setSearchValue,\n    searchedTodos,\n    onComplete,\n    onDelete\n}) => {\n\n  return (\n    <React.Fragment>\n      <TodoCounter\n        total={total}\n        completed={completed}\n      />\n      <TodoSearch\n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n      />\n\n      <TodoList>\n        {searchedTodos.map(todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        ))}\n      </TodoList>\n\n      <CreateTodoButton />\n    </React.Fragment>\n  );\n}\n\nexport { AppUI }\n"]},"metadata":{},"sourceType":"module"}