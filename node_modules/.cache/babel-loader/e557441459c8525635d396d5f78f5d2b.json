{"ast":null,"code":"var _jsxFileName = \"/home/danielnote-linux/demotodo/src/Components/TodoSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../Css/TodoSearch.css';\nimport { TodoContext } from './TodoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoSearch = () => {\n  _s();\n\n  const {\n    searchValue,\n    setSearchValue\n  } = React.useContext(TodoContext);\n\n  const onSearchValueChange = event => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"TodoSearch\",\n    placeholder: \"Cebolla\",\n    value: searchValue,\n    onChange: onSearchValueChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoSearch, \"9unRetbzABklbmBvjZKO3Bu0x6I=\");\n\n_c = TodoSearch;\nexport { TodoSearch };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoSearch\");","map":{"version":3,"sources":["/home/danielnote-linux/demotodo/src/Components/TodoSearch.jsx"],"names":["React","TodoContext","TodoSearch","searchValue","setSearchValue","useContext","onSearchValueChange","event","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCJ,KAAK,CAACK,UAAN,CAAiBJ,WAAjB,CAAxC;;AAEA,QAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAP,IAAAA,cAAc,CAACG,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAd;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,KAAK,EAAER,WAHT;AAIE,IAAA,QAAQ,EAAEG;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhBD;;GAAMJ,U;;KAAAA,U;AAkBN,SAASA,UAAT","sourcesContent":["import React from 'react';\nimport '../Css/TodoSearch.css';\nimport { TodoContext } from './TodoContext';\n\nconst TodoSearch = () => {\n  const { searchValue, setSearchValue } = React.useContext(TodoContext)\n  \n  const onSearchValueChange = (event) => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Cebolla\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n}\n\nexport { TodoSearch };\n"]},"metadata":{},"sourceType":"module"}