{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\n\nconst useLocalStorage = (itemName, initialValue) => {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(false);\n  const [item, setItem] = React.useState(initialValue);\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    }, 3000);\n  });\n\n  const saveItem = newItem => {\n    try {\n      const stringfiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringfiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error\n  };\n};\n\n_s(useLocalStorage, \"hx7Y7bN8jdZVcIP55e9LRaGqhao=\");\n\nexport { useLocalStorage };","map":{"version":3,"sources":["/home/danielnote-linux/demotodo/src/Components/useLocalStorage.jsx"],"names":["React","useLocalStorage","itemName","initialValue","loading","setLoading","useState","error","setError","item","setItem","useEffect","setTimeout","localStorageItem","localStorage","getItem","parsedItem","JSON","stringify","parse","saveItem","newItem","stringfiedItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,YAAX,KAA4B;AAAA;;AAChD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACM,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACM,QAAN,CAAeH,YAAf,CAAxB;AAEAH,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AAClBC,IAAAA,UAAU,CAAC,MAAM;AACjB,UAAI;AACA,cAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqBb,QAArB,CAAzB;AACA,YAAIc,UAAJ;;AAEA,YAAI,CAACH,gBAAL,EAAuB;AACvBC,UAAAA,YAAY,CAACJ,OAAb,CAAqBR,QAArB,EAA+Be,IAAI,CAACC,SAAL,CAAef,YAAf,CAA/B;AACAa,UAAAA,UAAU,GAAGb,YAAb;AACC,SAHD,MAGO;AACPa,UAAAA,UAAU,GAAGC,IAAI,CAACE,KAAL,CAAWN,gBAAX,CAAb;AACC;;AAEDH,QAAAA,OAAO,CAACM,UAAD,CAAP;AACAX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAbD,CAaE,OAAME,KAAN,EAAa;AACXC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AAEA,KAlBS,EAkBP,IAlBO,CAAV;AAmBH,GApBD;;AAsBA,QAAMa,QAAQ,GAAIC,OAAD,IAAa;AAC1B,QAAI;AACJ,YAAMC,cAAc,GAAGL,IAAI,CAACC,SAAL,CAAeG,OAAf,CAAvB;AACAP,MAAAA,YAAY,CAACJ,OAAb,CAAqBR,QAArB,EAA+BoB,cAA/B;AACAZ,MAAAA,OAAO,CAACW,OAAD,CAAP;AACC,KAJD,CAIE,OAAMd,KAAN,EAAa;AACfC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACC;AACJ,GARD;;AAUA,SAAO;AACHE,IAAAA,IADG;AAEHW,IAAAA,QAFG;AAGHhB,IAAAA,OAHG;AAIHG,IAAAA;AAJG,GAAP;AAMH,CA3CD;;GAAMN,e;;AA6CN,SAASA,eAAT","sourcesContent":["import React from 'react'\n\nconst useLocalStorage = (itemName, initialValue) => {\n    const [loading, setLoading] = React.useState(true)\n    const [error, setError] = React.useState(false)\n    const [item, setItem] = React.useState(initialValue);\n\n    React.useEffect(() => {\n        setTimeout(() => {\n        try {\n            const localStorageItem = localStorage.getItem(itemName)\n            let parsedItem;\n\n            if (!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue))\n            parsedItem = initialValue\n            } else {\n            parsedItem = JSON.parse(localStorageItem)\n            }\n\n            setItem(parsedItem)\n            setLoading(false)\n        } catch(error) {\n            setError(error)\n        }\n        \n        }, 3000)\n    })\n\n    const saveItem = (newItem) => {\n        try {\n        const stringfiedItem = JSON.stringify(newItem)\n        localStorage.setItem(itemName, stringfiedItem)\n        setItem(newItem)\n        } catch(error) {\n        setError(error)\n        }\n    }\n\n    return {\n        item,\n        saveItem,\n        loading,\n        error,\n    }\n}\n\nexport { useLocalStorage }"]},"metadata":{},"sourceType":"module"}