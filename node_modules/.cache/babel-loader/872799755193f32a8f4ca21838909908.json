{"ast":null,"code":"var _jsxFileName = \"/home/danielnote-linux/demotodo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Display } from './Components/Display';\nimport { Calculator } from './Components/Calculator';\nimport { CalButton } from './Components/CalButton';\nimport { History } from './Components/History';\nimport { HistoryItem } from './Components/HistoryItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numberButtons = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\nconst actionButtons = ['CE', 'C', '<-', '.', '-/+'];\nconst operationButtons = ['=', '-', '+', '/', '*', '%'];\n\nfunction App() {\n  _s();\n\n  const [displayState, setDisplay] = useState('');\n  const [historyState, setHistory] = useState('');\n  let historyOperations = ['1', '2', '3'];\n\n  const showDisplay = button => {\n    if (button === 'CE' || button === 'C') {\n      setDisplay('');\n    } else if (button === '<-') {\n      setDisplay(displayState.substring(0, displayState.length - 1));\n    } else if (button === '=') {} else if (button === '+') {\n      const lastStateDisplay = displayState;\n      setDisplay(lastStateDisplay + button);\n      historyOperations.push(displayState);\n      console.log(historyOperations);\n      setHistory(historyOperations);\n    } else if (button === '-') {} else if (button === '/') {} else if (button === '*') {} else if (button === '%') {} else {\n      const lastStateDisplay = displayState;\n      setDisplay(lastStateDisplay + button);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      displayState: displayState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calculator, {\n      children: [actionButtons.map(actionButton => /*#__PURE__*/_jsxDEV(CalButton, {\n        character: actionButton,\n        showDisplay: () => showDisplay(actionButton)\n      }, actionButton, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)), numberButtons.map(numberButton => /*#__PURE__*/_jsxDEV(CalButton, {\n        character: numberButton,\n        showDisplay: () => showDisplay(numberButton)\n      }, numberButton, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)), operationButtons.map(operationButton => /*#__PURE__*/_jsxDEV(CalButton, {\n        character: operationButton,\n        showDisplay: () => showDisplay(operationButton)\n      }, operationButton, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      children: historyOperations.map(historyOperation => /*#__PURE__*/_jsxDEV(HistoryItem, {\n        character: historyOperation\n      }, historyOperation, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9T2pkIlPM6uVP3+04CbWY3+dEz4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/danielnote-linux/demotodo/src/App.js"],"names":["React","useState","Display","Calculator","CalButton","History","HistoryItem","numberButtons","actionButtons","operationButtons","App","displayState","setDisplay","historyState","setHistory","historyOperations","showDisplay","button","substring","length","lastStateDisplay","push","console","log","map","actionButton","numberButton","operationButton","historyOperation"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Display } from './Components/Display'\nimport { Calculator } from './Components/Calculator'\nimport { CalButton } from './Components/CalButton'\nimport { History } from './Components/History'\nimport { HistoryItem } from './Components/HistoryItem'\n\nconst numberButtons = ['0','1','2','3','4','5','6','7','8','9']\nconst actionButtons = ['CE','C','<-','.','-/+']\nconst operationButtons = ['=','-','+','/','*','%']\n\nfunction App() {\n\n  const [displayState, setDisplay] = useState('')\n  const [historyState, setHistory] = useState('')\n\n  let historyOperations = ['1','2','3']\n\n  const showDisplay = (button) => {\n    if (button === 'CE' || button === 'C') {\n      setDisplay('')\n    } else if (button === '<-') {\n      setDisplay(displayState.substring(0, displayState.length - 1))\n    } else if (button === '=') {\n\n    } else if (button === '+') {\n      const lastStateDisplay = displayState\n      setDisplay(lastStateDisplay + button)\n      historyOperations.push(displayState)\n\n      console.log(historyOperations)\n\n      setHistory(historyOperations)\n    } else if (button === '-') {\n\n    } else if (button === '/') {\n\n    } else if (button === '*') {\n\n    } else if (button === '%') {\n\n    } else {\n      const lastStateDisplay = displayState\n      setDisplay(lastStateDisplay + button)\n    }\n    \n  }\n\n  return (\n    <React.Fragment>\n      <Display\n        displayState={displayState}\n      />\n      <Calculator>\n        {actionButtons.map(actionButton => (\n          <CalButton \n            key={actionButton} \n            character={actionButton}\n            showDisplay={() => showDisplay(actionButton)}\n          />\n        ))}\n        {numberButtons.map(numberButton => (\n          <CalButton \n            key={numberButton} \n            character={numberButton}\n            showDisplay={() => showDisplay(numberButton)}\n          />\n        ))}\n        {operationButtons.map(operationButton => (\n          <CalButton \n            key={operationButton} \n            character={operationButton}\n            showDisplay={() => showDisplay(operationButton)}\n          />\n        ))}\n      </Calculator>\n      <History>\n        {historyOperations.map(historyOperation => (\n            <HistoryItem \n              key={historyOperation} \n              character={historyOperation}\n            />\n          ))}\n      </History>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}