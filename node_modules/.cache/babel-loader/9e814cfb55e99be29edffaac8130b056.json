{"ast":null,"code":"var _jsxFileName = \"/home/danielnote-linux/demotodo/src/App.js\";\nimport React, { useState } from 'react';\nimport { Display } from './Components/Display';\nimport { Calculator } from './Components/Calculator';\nimport { CalButton } from './Components/CalButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      displayState: displayState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calculator, {\n      children: [actionButtons.map(actionButton => /*#__PURE__*/_jsxDEV(CalButton, {\n        character: actionButton,\n        showDisplay: () => showDisplay(actionButton)\n      }, actionButton, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)), numberButtons.map(numberButton => /*#__PURE__*/_jsxDEV(CalButton, {\n        character: numberButton,\n        showDisplay: () => showDisplay(numberButton)\n      }, numberButton, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)), operationButtons.map(operationButton => /*#__PURE__*/_jsxDEV(CalButton, {\n        character: operationButton,\n        showDisplay: () => showDisplay(operationButton)\n      }, operationButton, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      historyState: historyState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/danielnote-linux/demotodo/src/App.js"],"names":["React","useState","Display","Calculator","CalButton","App","displayState","actionButtons","map","actionButton","showDisplay","numberButtons","numberButton","operationButtons","operationButton","historyState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;;AAGA,SAASC,GAAT,GAAe;AAEb,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,YAAY,EAAEC;AADhB;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAA,iBACGC,aAAa,CAACC,GAAd,CAAkBC,YAAY,iBAC7B,QAAC,SAAD;AAEE,QAAA,SAAS,EAAEA,YAFb;AAGE,QAAA,WAAW,EAAE,MAAMC,WAAW,CAACD,YAAD;AAHhC,SACOA,YADP;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAQGE,aAAa,CAACH,GAAd,CAAkBI,YAAY,iBAC7B,QAAC,SAAD;AAEE,QAAA,SAAS,EAAEA,YAFb;AAGE,QAAA,WAAW,EAAE,MAAMF,WAAW,CAACE,YAAD;AAHhC,SACOA,YADP;AAAA;AAAA;AAAA;AAAA,cADD,CARH,EAeGC,gBAAgB,CAACL,GAAjB,CAAqBM,eAAe,iBACnC,QAAC,SAAD;AAEE,QAAA,SAAS,EAAEA,eAFb;AAGE,QAAA,WAAW,EAAE,MAAMJ,WAAW,CAACI,eAAD;AAHhC,SACOA,eADP;AAAA;AAAA;AAAA;AAAA,cADD,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eA2BE,QAAC,OAAD;AACE,MAAA,YAAY,EAAEC;AADhB;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;KAnCQV,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Display } from './Components/Display'\nimport { Calculator } from './Components/Calculator'\nimport { CalButton } from './Components/CalButton'\n\n\nfunction App() {\n\n  return (\n    <React.Fragment>\n      <Display\n        displayState={displayState}\n      />\n      <Calculator>\n        {actionButtons.map(actionButton => (\n          <CalButton \n            key={actionButton} \n            character={actionButton}\n            showDisplay={() => showDisplay(actionButton)}\n          />\n        ))}\n        {numberButtons.map(numberButton => (\n          <CalButton \n            key={numberButton} \n            character={numberButton}\n            showDisplay={() => showDisplay(numberButton)}\n          />\n        ))}\n        {operationButtons.map(operationButton => (\n          <CalButton \n            key={operationButton} \n            character={operationButton}\n            showDisplay={() => showDisplay(operationButton)}\n          />\n        ))}\n      </Calculator>\n      <History\n        historyState={historyState}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}